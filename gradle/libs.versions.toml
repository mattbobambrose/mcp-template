[versions]
kotlin = "2.1.21"
junit = "4.13.2"
kotlinx-coroutines = "1.10.2"
mcp = "0.5.0"
slf4j = "2.0.17"
ktor = "3.1.1"
shadow = "8.1.1"
openai = "2.2.0"
utils = "2.3.11"
mcp-utils = "0.1.1-SNAPSHOT"

[libraries]
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
mcp-kotlin = { group = "io.modelcontextprotocol", name = "kotlin-sdk", version.ref = "mcp" }
slf4j = { group = "org.slf4j", name = "slf4j-nop", version.ref = "slf4j" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-content-negotation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
openai-java = { group = "com.openai", name = "openai-java", version.ref = "openai" }
utils-json = { module = "com.github.pambrose.common-utils:json-utils", version.ref = "utils" }
mcp-shell = { module = "com.github.mattbobambrose.mcp-utils:shell", version.ref = "mcp-utils" }
mcp-tools = { module = "com.github.mattbobambrose.mcp-utils:tools", version.ref = "mcp-utils" }

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
shadow = { id = "com.github.johnrengelman.shadow", version.ref = "shadow" }